week5:
src folder:
index1.js:-
----------
const express=require("express")
const hbs=require("hbs")
const path=require("path")

const collection=require("./mongodb")

const PORT = 3001
const app=express()
const templatePath=path.join(__dirname,'../templates')

app.use(express.json())
app.use(express.urlencoded({extended:false}))

app.set("view engine","hbs")
app.set("views",templatePath)


app.get("/signup", (req,res)=>{
    res.render("signup")
})

app.post("/signup",async(req,res)=>{
   
    const data={
        name : req.body.name,
        password : req.body.password
    }
    await collection.insertMany([data])
    res.render("login")
})
app.get("/login", (req,res)=>{
    res.render("login")
})
app.post("/login",async(req,res)=>{
    try{
    const check=await collection.findOne({name:req.body.name})
        if(check.password===req.body.password)
        {
            
            res.render("home")
        }
        else{
            res.send("wrong")
        }
    }
    catch
    {
        res.send("Wrong Details")
    }
})
app.get("/home", async(req, res) =>{
   
});
 
app.post("/home",async(req,res)=>{
    try{
    
        const userdate=await collection.findOne({name:req.body.name})
        console.log(userdate)
          res.render("home",{user:userdate})
    res.redirect("/login");
}
catch
{
    res.send("Wrong Details")
}
})
app.listen(3001, ()=>{
    console.log(`listening on port ${PORT}`)
})

-----------
mongodb.js:-
-----
const mongoose=require("mongoose")
mongoose.connect("mongodb://localhost:27017/rampriya")
.then(()=>{
    console.log("Mongo db connected")
})
.catch(()=>{
    console.log("failed")
})

const LoginSchema=new mongoose.Schema({
    name:String,
    password:String,
})

const collection=new mongoose.model("week5",LoginSchema)
module.exports=collection
------------
templates folder:
home.hbs:-
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>

</head>
<body>
    <h1>Welcome to home</h1>
    <form action="/home" method="post">
    
    <input type="submit" value="logout">
    </form>
</body>
</html>
----------
login.hbs:-
-----------
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
</head>
<body>
    <h1>Login</h1>
    <form action="/login" method="post">
    <input type="text"  name="name" placeholder="Enter Name">
    <input type="password"  name="password" placeholder="Enter Password">
    <input type="submit">
    </form>
</body>
</html>

-----------
signup.hbs:-
-----------
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <title>Page Title</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
</head>
<body>
    <h1>SignUp page</h1>
    <form action="/signup" method="post">
    <input type="text"  name="name" placeholder="Enter Name">
    <input type="password"  name="password" placeholder="Enter Password">
    <input type="submit">
</form>

</body>
</html>


------------
commands to execute 5th program:
npm i express hbs start mongoose mongodb
cd src
node index.js
